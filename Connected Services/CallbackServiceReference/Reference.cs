//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AhorcadoClient.CallbackServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/GameServices")]
    [System.SerializableAttribute()]
    public partial class PlayerInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ProfilePicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerId {
            get {
                return this.PlayerIdField;
            }
            set {
                if ((this.PlayerIdField.Equals(value) != true)) {
                    this.PlayerIdField = value;
                    this.RaisePropertyChanged("PlayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProfilePic {
            get {
                return this.ProfilePicField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePicField, value) != true)) {
                    this.ProfilePicField = value;
                    this.RaisePropertyChanged("ProfilePic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/GameServices")]
    [System.SerializableAttribute()]
    public partial class WordInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DifficultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WordTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Difficult {
            get {
                return this.DifficultField;
            }
            set {
                if ((this.DifficultField.Equals(value) != true)) {
                    this.DifficultField = value;
                    this.RaisePropertyChanged("Difficult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WordID {
            get {
                return this.WordIDField;
            }
            set {
                if ((this.WordIDField.Equals(value) != true)) {
                    this.WordIDField = value;
                    this.RaisePropertyChanged("WordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WordText {
            get {
                return this.WordTextField;
            }
            set {
                if ((object.ReferenceEquals(this.WordTextField, value) != true)) {
                    this.WordTextField = value;
                    this.RaisePropertyChanged("WordText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/GameServices")]
    [System.SerializableAttribute()]
    public partial class MatchInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] GuessedLettersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGameOverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatchIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AhorcadoClient.CallbackServiceReference.PlayerInfoDTO Player1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AhorcadoClient.CallbackServiceReference.PlayerInfoDTO Player2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RemainingAttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AhorcadoClient.CallbackServiceReference.WordInfoDTO WordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] GuessedLetters {
            get {
                return this.GuessedLettersField;
            }
            set {
                if ((object.ReferenceEquals(this.GuessedLettersField, value) != true)) {
                    this.GuessedLettersField = value;
                    this.RaisePropertyChanged("GuessedLetters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGameOver {
            get {
                return this.IsGameOverField;
            }
            set {
                if ((this.IsGameOverField.Equals(value) != true)) {
                    this.IsGameOverField = value;
                    this.RaisePropertyChanged("IsGameOver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchID {
            get {
                return this.MatchIDField;
            }
            set {
                if ((this.MatchIDField.Equals(value) != true)) {
                    this.MatchIDField = value;
                    this.RaisePropertyChanged("MatchID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AhorcadoClient.CallbackServiceReference.PlayerInfoDTO Player1 {
            get {
                return this.Player1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Player1Field, value) != true)) {
                    this.Player1Field = value;
                    this.RaisePropertyChanged("Player1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AhorcadoClient.CallbackServiceReference.PlayerInfoDTO Player2 {
            get {
                return this.Player2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Player2Field, value) != true)) {
                    this.Player2Field = value;
                    this.RaisePropertyChanged("Player2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemainingAttempts {
            get {
                return this.RemainingAttemptsField;
            }
            set {
                if ((this.RemainingAttemptsField.Equals(value) != true)) {
                    this.RemainingAttemptsField = value;
                    this.RaisePropertyChanged("RemainingAttempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AhorcadoClient.CallbackServiceReference.WordInfoDTO Word {
            get {
                return this.WordField;
            }
            set {
                if ((object.ReferenceEquals(this.WordField, value) != true)) {
                    this.WordField = value;
                    this.RaisePropertyChanged("Word");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CallbackServiceReference.IGameManager", CallbackContract=typeof(AhorcadoClient.CallbackServiceReference.IGameManagerCallback))]
    public interface IGameManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/JoinMatch", ReplyAction="http://tempuri.org/IGameManager/JoinMatchResponse")]
        void JoinMatch(int matchId, AhorcadoClient.CallbackServiceReference.PlayerInfoDTO player, AhorcadoClient.CallbackServiceReference.WordInfoDTO word, int maxAttempts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/JoinMatch", ReplyAction="http://tempuri.org/IGameManager/JoinMatchResponse")]
        System.Threading.Tasks.Task JoinMatchAsync(int matchId, AhorcadoClient.CallbackServiceReference.PlayerInfoDTO player, AhorcadoClient.CallbackServiceReference.WordInfoDTO word, int maxAttempts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/LeaveMatch", ReplyAction="http://tempuri.org/IGameManager/LeaveMatchResponse")]
        void LeaveMatch(int matchId, int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/LeaveMatch", ReplyAction="http://tempuri.org/IGameManager/LeaveMatchResponse")]
        System.Threading.Tasks.Task LeaveMatchAsync(int matchId, int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/GuessLetter", ReplyAction="http://tempuri.org/IGameManager/GuessLetterResponse")]
        void GuessLetter(int matchId, int playerId, string letter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/GuessLetter", ReplyAction="http://tempuri.org/IGameManager/GuessLetterResponse")]
        System.Threading.Tasks.Task GuessLetterAsync(int matchId, int playerId, string letter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/OnPlayerJoined")]
        void OnPlayerJoined(int matchId, AhorcadoClient.CallbackServiceReference.PlayerInfoDTO player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/OnPlayerLeft")]
        void OnPlayerLeft(int matchId, int playerId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/OnMatchReady")]
        void OnMatchReady(int matchId, AhorcadoClient.CallbackServiceReference.MatchInfoDTO matchInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameManager/OnLetterGuessed")]
        void OnLetterGuessed(int matchId, string letter, bool isCorrect, int remainingAttempts, bool isGameOver);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameManagerChannel : AhorcadoClient.CallbackServiceReference.IGameManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameManagerClient : System.ServiceModel.DuplexClientBase<AhorcadoClient.CallbackServiceReference.IGameManager>, AhorcadoClient.CallbackServiceReference.IGameManager {
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void JoinMatch(int matchId, AhorcadoClient.CallbackServiceReference.PlayerInfoDTO player, AhorcadoClient.CallbackServiceReference.WordInfoDTO word, int maxAttempts) {
            base.Channel.JoinMatch(matchId, player, word, maxAttempts);
        }
        
        public System.Threading.Tasks.Task JoinMatchAsync(int matchId, AhorcadoClient.CallbackServiceReference.PlayerInfoDTO player, AhorcadoClient.CallbackServiceReference.WordInfoDTO word, int maxAttempts) {
            return base.Channel.JoinMatchAsync(matchId, player, word, maxAttempts);
        }
        
        public void LeaveMatch(int matchId, int playerId) {
            base.Channel.LeaveMatch(matchId, playerId);
        }
        
        public System.Threading.Tasks.Task LeaveMatchAsync(int matchId, int playerId) {
            return base.Channel.LeaveMatchAsync(matchId, playerId);
        }
        
        public void GuessLetter(int matchId, int playerId, string letter) {
            base.Channel.GuessLetter(matchId, playerId, letter);
        }
        
        public System.Threading.Tasks.Task GuessLetterAsync(int matchId, int playerId, string letter) {
            return base.Channel.GuessLetterAsync(matchId, playerId, letter);
        }
    }
}
