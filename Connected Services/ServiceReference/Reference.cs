//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AhorcadoClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    using System.Collections.Generic;

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerDTO", Namespace="http://schemas.datacontract.org/2004/07/Services.DTOs")]
    [System.SerializableAttribute()]
    public partial class PlayerDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlayerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ProfilePicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SelectedLanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDay {
            get {
                return this.BirthDayField;
            }
            set {
                if ((this.BirthDayField.Equals(value) != true)) {
                    this.BirthDayField = value;
                    this.RaisePropertyChanged("BirthDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerID {
            get {
                return this.PlayerIDField;
            }
            set {
                if ((this.PlayerIDField.Equals(value) != true)) {
                    this.PlayerIDField = value;
                    this.RaisePropertyChanged("PlayerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProfilePic {
            get {
                return this.ProfilePicField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePicField, value) != true)) {
                    this.ProfilePicField = value;
                    this.RaisePropertyChanged("ProfilePic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SelectedLanguageID {
            get {
                return this.SelectedLanguageIDField;
            }
            set {
                if ((this.SelectedLanguageIDField.Equals(value) != true)) {
                    this.SelectedLanguageIDField = value;
                    this.RaisePropertyChanged("SelectedLanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalScore {
            get {
                return this.TotalScoreField;
            }
            set {
                if ((this.TotalScoreField.Equals(value) != true)) {
                    this.TotalScoreField = value;
                    this.RaisePropertyChanged("TotalScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Category", Namespace = "http://schemas.datacontract.org/2004/07/Services.DTOs")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get { return this.extensionDataField; }
            set { this.extensionDataField = value; }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID
        {
            get { return this.CategoryIDField; }
            set
            {
                if ((this.CategoryIDField.Equals(value) != true))
                {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName
        {
            get { return this.CategoryNameField; }
            set
            {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true))
                {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "WordDTO", Namespace = "http://schemas.datacontract.org/2004/07/Services.DTOs")]
    [System.SerializableAttribute()]
    public partial class Word : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WordIDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string wordField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DifficultField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get { return this.extensionDataField; }
            set { this.extensionDataField = value; }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WordID
        {
            get { return this.WordIDField; }
            set
            {
                if ((this.WordIDField.Equals(value) != true))
                {
                    this.WordIDField = value;
                    this.RaisePropertyChanged("WordID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID
        {
            get { return this.CategoryIDField; }
            set
            {
                if ((this.CategoryIDField.Equals(value) != true))
                {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID
        {
            get { return this.LanguageIDField; }
            set
            {
                if ((this.LanguageIDField.Equals(value) != true))
                {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string word
        {
            get { return this.wordField; }
            set
            {
                if ((object.ReferenceEquals(this.wordField, value) != true))
                {
                    this.wordField = value;
                    this.RaisePropertyChanged("word");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get { return this.DescriptionField; }
            set
            {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true))
                {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Difficult
        {
            get { return this.DifficultField; }
            set
            {
                if ((this.DifficultField.Equals(value) != true))
                {
                    this.DifficultField = value;
                    this.RaisePropertyChanged("Difficult");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "MatchDTO", Namespace = "http://schemas.datacontract.org/2004/07/Services.DTOs")]
    [System.SerializableAttribute()]
    public partial class Match : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatchIDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Player1Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Player2Field;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WordIDField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIDField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get { return this.extensionDataField; }
            set { this.extensionDataField = value; }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchID
        {
            get { return this.MatchIDField; }
            set
            {
                if ((this.MatchIDField.Equals(value) != true))
                {
                    this.MatchIDField = value;
                    this.RaisePropertyChanged("MatchID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Player1
        {
            get { return this.Player1Field; }
            set
            {
                if ((this.Player1Field.Equals(value) != true))
                {
                    this.Player1Field = value;
                    this.RaisePropertyChanged("Player1");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Player2
        {
            get { return this.Player2Field; }
            set
            {
                if ((this.Player2Field.Equals(value) != true))
                {
                    this.Player2Field = value;
                    this.RaisePropertyChanged("Player2");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WordID
        {
            get { return this.WordIDField; }
            set
            {
                if ((this.WordIDField.Equals(value) != true))
                {
                    this.WordIDField = value;
                    this.RaisePropertyChanged("WordID");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate
        {
            get { return this.CreateDateField; }
            set
            {
                if ((this.CreateDateField.Equals(value) != true))
                {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate
        {
            get { return this.EndDateField; }
            set
            {
                if ((this.EndDateField.Equals(value) != true))
                {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusID
        {
            get { return this.StatusIDField; }
            set
            {
                if ((this.StatusIDField.Equals(value) != true))
                {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMainManager")]
    public interface IMainManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/LogIn", ReplyAction="http://tempuri.org/IPlayerManager/LogInResponse")]
        AhorcadoClient.ServiceReference.PlayerDTO LogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/LogIn", ReplyAction="http://tempuri.org/IPlayerManager/LogInResponse")]
        System.Threading.Tasks.Task<AhorcadoClient.ServiceReference.PlayerDTO> LogInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/RegisterPlayer", ReplyAction="http://tempuri.org/IPlayerManager/RegisterPlayerResponse")]
        bool RegisterPlayer(AhorcadoClient.ServiceReference.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/RegisterPlayer", ReplyAction="http://tempuri.org/IPlayerManager/RegisterPlayerResponse")]
        System.Threading.Tasks.Task<bool> RegisterPlayerAsync(AhorcadoClient.ServiceReference.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/UpdatePlayerInfo", ReplyAction="http://tempuri.org/IPlayerManager/UpdatePlayerInfoResponse")]
        bool UpdatePlayerInfo(AhorcadoClient.ServiceReference.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerManager/UpdatePlayerInfo", ReplyAction="http://tempuri.org/IPlayerManager/UpdatePlayerInfoResponse")]
        System.Threading.Tasks.Task<bool> UpdatePlayerInfoAsync(AhorcadoClient.ServiceReference.PlayerDTO player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainManager/Ping", ReplyAction="http://tempuri.org/IMainManager/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainManager/Ping", ReplyAction="http://tempuri.org/IMainManager/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMainManager/GetCategories", ReplyAction = "http://tempuri.org/IMainManager/GetCategoriesResponse")]
        System.Collections.Generic.List<AhorcadoClient.ServiceReference.Category> GetCategories();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMainManager/GetDifficults", ReplyAction = "http://tempuri.org/IMainManager/GetDifficultsResponse")]
        System.Collections.Generic.List<int> GetDifficults(int categoryId);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMainManager/GetWords", ReplyAction = "http://tempuri.org/IMainManager/GetWordsResponse")]
        System.Collections.Generic.List<AhorcadoClient.ServiceReference.Word> GetWords(int categoryId, int difficult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMainManager/CreateMatch", ReplyAction = "http://tempuri.org/IMainManager/CreateMatchResponse")]
        AhorcadoClient.ServiceReference.Match CreateMatch(int player1Id, int wordId);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainManagerChannel : AhorcadoClient.ServiceReference.IMainManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainManagerClient : System.ServiceModel.ClientBase<AhorcadoClient.ServiceReference.IMainManager>, AhorcadoClient.ServiceReference.IMainManager {
        
        public MainManagerClient() {
        }
        
        public MainManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AhorcadoClient.ServiceReference.PlayerDTO LogIn(string username, string password) {
            return base.Channel.LogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<AhorcadoClient.ServiceReference.PlayerDTO> LogInAsync(string username, string password) {
            return base.Channel.LogInAsync(username, password);
        }
        
        public bool RegisterPlayer(AhorcadoClient.ServiceReference.PlayerDTO player) {
            return base.Channel.RegisterPlayer(player);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterPlayerAsync(AhorcadoClient.ServiceReference.PlayerDTO player) {
            return base.Channel.RegisterPlayerAsync(player);
        }
        
        public bool UpdatePlayerInfo(AhorcadoClient.ServiceReference.PlayerDTO player) {
            return base.Channel.UpdatePlayerInfo(player);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePlayerInfoAsync(AhorcadoClient.ServiceReference.PlayerDTO player) {
            return base.Channel.UpdatePlayerInfoAsync(player);
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync() {
            return base.Channel.PingAsync();
        }

        public System.Collections.Generic.List<AhorcadoClient.ServiceReference.Category> GetCategories()
        {
            return base.Channel.GetCategories();
        }

        public System.Collections.Generic.List<int> GetDifficults(int categoryId)
        {
            return base.Channel.GetDifficults(categoryId);
        }

        public System.Collections.Generic.List<AhorcadoClient.ServiceReference.Word> GetWords(int categoryId, int difficult)
        {
            return base.Channel.GetWords(categoryId, difficult);
        }

        public AhorcadoClient.ServiceReference.Match CreateMatch(int player1Id, int wordId)
        {
            return base.Channel.CreateMatch(player1Id, wordId);
        }
    }
}
